/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package my_calcul;

/**
 *
 * @author user
 */
import java.awt.*;
import java.awt.event.*;
import java.awt.event.ActionEvent.*;
import java.awt.event.ActionListener.*;
import javax.swing.JFrame;
import java.awt.Frame;
import javax.swing.JToggleButton;
import java.awt.Button;
import java.awt.Panel;
import java.awt.Font;
import java.awt.Component;
import static javax.swing.JFrame.EXIT_ON_CLOSE;
import javax.swing.JPanel;


public class My_calcul implements ActionListener{
    /**
     * @param args the command line arguments
     */
    int k;
    boolean m;
    String a,b,c,d,l;
    Frame linear;
    Button one,two,three,four,five,six,seven,eight,nine,zero,plus,minus,mult,divide,point,del,reset,on,equal;
    Panel color;
    TextField f;
    GridLayout lg;
    GridBagConstraints g=new GridBagConstraints();
    
    My_calcul()
    {
        linear=new Frame("MyCalculator");
        color=new Panel(new GridBagLayout());
        linear.setLayout(new FlowLayout());
        
        zero=new Button("0");
        zero.addActionListener(this);
        
        one=new Button("1");
        one.addActionListener(this);
        
        two=new Button("2");
        two.addActionListener(this);
        
        three=new Button("3");
        three.addActionListener(this);
        
        four=new Button("4");
        four.addActionListener(this);
        
        five=new Button("5");
        five.addActionListener(this);
        
        six=new Button("6");
        six.addActionListener(this);
        
        seven=new Button("7");
        seven.addActionListener(this);
        
        eight=new Button("8");
        eight.addActionListener(this);
        
        nine=new Button("9");
        nine.addActionListener(this);
        
        plus=new Button("+");
        plus.addActionListener(this);
        
        minus=new Button("-");
        minus.addActionListener(this);
        
        mult=new Button("*");
        mult.addActionListener(this);
        
        divide=new Button("/");
        divide.addActionListener(this);
        
        del=new Button("del");
        del.addActionListener(this);
        
        reset=new Button("reset");
        reset.addActionListener(this);
        
        on=new Button("on/off");
        on.addActionListener(this);
        
        equal=new Button("=");
        equal.addActionListener(this);
        
        point=new Button(".");
        point.addActionListener(this);
        
        f=new TextField(25);
        linear.add(f);
        color.setLayout(new GridLayout(4,4));
        linear.add(color);
        
        g.gridx=0;
        g.gridy=0;
        g.insets=new Insets(10,10,10,10);
        color.add(reset,c);
        g.gridx=3;
        g.gridy=0;
        color.add(on,c);
        g.gridx=4;
        g.gridy=0;
        
        color.add(seven,c);
        g.gridx=0;
        g.gridy=1;
        color.add(eight,c);
        g.gridx=1;
        g.gridx=1;
        color.add(nine,c);
        g.gridx=1;
        g.gridy=2;
        color.add(plus,c);
        g.gridx=1;
        g.gridy=3;
        color.add(minus,c);
        g.gridx=1;
        g.gridy=4;
        
        
        color.add(four,c);
        g.gridx=2;
        g.gridy=0;
        color.add(five,c);
        g.gridx=2;
        g.gridy=1;
        color.add(six,c);
        g.gridx=2;
        g.gridy=2;
        color.add(mult,c);
        g.gridx=2;
        g.gridy=3;
        color.add(divide,c);
        g.gridx=2;
        g.gridy=4;
        
        
        color.add(one,c);
        g.gridx=3;
        g.gridy=0;
        color.add(two,c);
        g.gridx=3;
        g.gridy=1;
        color.add(three,c);
        g.gridx=3;
        g.gridy=2;
        
        
        color.add(zero,c);
        g.gridx=4;
        g.gridy=0;
        color.add(point,c);
        g.gridx=4;
        g.gridy=1;
        color.add(del,c);
        g.gridx=4;
        g.gridy=3;
        color.add(equal,c);
        g.gridx=4;
        g.gridy=4;
        
        linear.setSize(250,300);
        linear.setVisible(true);
        linear.addWindowListener(new WindowAdapter(){
            
            public void windowClosing(WindowEvent we){
                  System.exit(0);
        }
        });
         
    }
    public void actionPerformed(ActionEvent e)
    {
        if(e.getSource()==zero)
        {
            a=f.getText();
            b="0";
            c=a+b;
            f.setText(c);
        }
        if(e.getSource()==one)
        {
            a=f.getText();
            b="1";
            c=a+b;
            f.setText(c);
        }
        if(e.getSource()==two)
        {
            a=f.getText();
            b="2";
            c=a+b;
            f.setText(c);
        }
        if(e.getSource()==three)
        {
            a=f.getText();
            b="3";
            c=a+b;
            f.setText(c);
        }
        if(e.getSource()==four)
        {
            a=f.getText();
            b="4";
            c=a+b;
            f.setText(c);
        }
        if(e.getSource()==five)
        {
            a=f.getText();
            b="5";
            c=a+b;
            f.setText(c);
        }
        if(e.getSource()==six)
        {
            a=f.getText();
            b="6";
            c=a+b;
            f.setText(c);
        }
        if(e.getSource()==seven)
        {
            a=f.getText();
            b="7";
            c=a+b;
            f.setText(c);
        }
        if(e.getSource()==eight)
        {
            a=f.getText();
            b="8";
            c=a+b;
            f.setText(c);
        }
        if(e.getSource()==nine)
        {
            a=f.getText();
            b="9";
            c=a+b;
            f.setText(c);
        }
        if(e.getSource()==plus)
        {
            d=f.getText();
            f.setText("");
            k=1;
        }
        if(e.getSource()==minus)
        {
            d=f.getText();
            f.setText("");
            k=2;
        }
        if(e.getSource()==mult)
        {
           d=f.getText();
            f.setText("");
            k=3;
        }
        if(e.getSource()==divide)
        {
            d=f.getText();
            f.setText("");
            k=4;
        }
        if(e.getSource()==point)
        {
            d=f.getText();
            f.setText("");
            k=5;
        }
        if(e.getSource()==equal)
        {
            l=f.getText();
            if(k==1)
			{
				k= Integer.parseInt(d)+Integer.parseInt(l);
				f.setText(String.valueOf(k));
			}
            else
	    if(k==2)
			{
				k = Integer.parseInt(d)-Integer.parseInt(l);
				f.setText(String.valueOf(k));
			}
            else
	    if(k==3)
			{
				k = Integer.parseInt(d)*Integer.parseInt(l);
				f.setText(String.valueOf(k));
			}
            if(k==4)
			{
			    try
			    {
			        int p=Integer.parseInt(l);
			        if(p!=0)
                    {
                        	k= Integer.parseInt(d)/Integer.parseInt(l);
                    f.setText(String.valueOf(k));
                     }
                     else
                        f.setText("Divide By 0 Error=infinity");

                }
                catch(Exception i){}
			}
			if(k==5)
			{
				k = Integer.parseInt(d)%Integer.parseInt(l);
				f.setText(String.valueOf(k));
			}
		}
        if(e.getSource()==del)//delete
		{
                  c=c.substring(0,c.length()-1);
                  f.setText(""+c);
		}
                if(e.getSource()==on)
                {
                 System.exit(0);
                }
                if(e.getSource()==reset)
		{
			f.setText("");
		}
	}
    public static void main(String[] args) {
        // TODO code application logic here
        My_calcul j=new My_calcul();
    } 
}
